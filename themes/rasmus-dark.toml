# Reverse Generation Tool Version 3.0
name = "Rasmus Dark"
theme = "dark"

# Theme Colors
[color]
black 		= "#000"
trans 		= "#00000000"
red			= "hsl(5, 100, 50)"
green		= "hsl(150, 100, 43)"
blue		= "hsl(210, 100, 50)"
orange		= "hsl(27, 100, 50)"
yellow		= "hsl(60, 100, 50)"
cyan		= "hsl(180, 100, 50)"
fg			= "#fff"
bg			= "hsl(0, 0, 7)"
unimportant	= "@fg::l=40"
cursor		= "hsl(320, 90, 70)"
accent		= "@cursor"
selection	= "hsl(204, 100, 70)"
type		= "@orange"
keyword		= "@blue"
data		= "@green"
meta 		= "@data::(s=15,l=50)"
metaKeyword = "@data::(s=20,l=60)"
header		= "@keyword::(s=80,l=70)"
fgBase		= "@fg::a=80"
typeRef		= "@type::(s=100,l=87)"
keywordBase = "@keyword::(s=40,l=70)"
dataBase	= "@data::(s=40,l=70)"

[code.error]
# bg = "@red"
border = "@red"
fg = "@red"

# [code.hint]
# bg = "code.hint.bg|code.info.bg|ui.code_popup|ui.popup|ui.bg"
# border = "code.hint.border|code.info.border|ui.border.secondary"
# fg = "code.hint.fg|editor.hint|editor.text::(v-20,a=80)"

# [code.info]
# bg = "code.info.bg|ui.code_popup|ui.popup|scheme.blue"
# border = "code.info.border|scheme.blue|ui.border.secondary"
# fg = "code.info.fg|scheme.blue"

# [code.success]
# bg = "code.success.bg|ui.code_popup|ui.popup|scheme.green"
# border = "code.success.border|scheme.green|ui.border.secondary"
# fg = "code.success.fg|scheme.green"

# [code.unreachable]
# bg = "code.unreachable.bg|ui.code_popup|ui.popup|scheme.red_dim"
# border = "code.unreachable.border|scheme.red_dim|ui.border.secondary"
# fg = "code.unreachable.fg|scheme.red_dim"

[code.warning]
# bg = "code.warning.bg|ui.code_popup|ui.popup|scheme.yellow"
border = "@yellow"
fg = "@yellow"

[editor]
# auto_complete = "editor.auto_complete|editor.hint|editor.text::(v-20,a=80)"
# bg = "editor.bg|ui.bg"
# gutter = "@fg::a=30"
# invisible = "editor.invisible|editor.active.highlight|player.highlight"
number = "@fg::a=30"
text = "@fgBase"
# search = "@yellow"

[editor.search]
captures = "@selection::(a=60,l=60,s=80)"
line = "#f00"
text = "@orange::(l=80,a.90,h+10)"

[editor.active]
line = "@fg::a=12"
matches = "@selection::(a=40,l=70)"
number = "@fg::a=60"

[editor.matches]
text = "@selection::(a=40,l=70)"
brackets = "@cursor::(l+10, a=80)"

[editor.guides]
wrap = "@fg::a=6"

[editor.guides.indent]
active = "@fg::a=6"
colors = []
# inactive = "editor.guides.indent.inactive|editor.guides.indent.active|editor.guides.indent"


# [file.conflict]
# bg = "file.conflict.bg|ui.bg"
# border = "file.conflict.border|scheme.red_br"
# fg = "file.conflict.fg|scheme.red_br"

[file.created]
# bg = "file.created.bg|ui.bg"
border = "@green"
fg = "@green"

[file.deleted]
# bg = "file.deleted.bg|ui.bg"
border = "@red::l=60"
fg = "@red::l=60"

# [file.hidden]
# bg = "file.hidden.bg|ui.bg"
# border = "file.hidden.border|ui.border.primary"
# fg = "file.hidden.fg|ui.text.muted"

# [file.ignored]
# bg = "file.ignored.bg|ui.bg"
# border = "file.ignored.border|ui.border.primary"
# fg = "file.ignored.fg|ui.text.muted"

[file.modified]
# bg = "file.modified.bg|ui.bg"
border = "@yellow::l=65"
fg = "@yellow::l=65"

# [file.renamed]
# bg = "file.renamed.bg|ui.bg"
# border = "file.renamed.border|scheme.purple"
# fg = "file.renamed.fg|scheme.purple"

# [foreground]
# link = "foreground.link"

[player]
cursor = "@cursor"
highlight = "@selection::a=30"
z = "@selection::a=20"

[scheme]
black = "@black"
# black_br = "scheme.black_br|terminal.bright_black|scheme.black::(v+15)"
# black_dim = "scheme.black_dim|terminal.dim_black|scheme.black::(v-15)"
blue = "@blue"
# blue_br = "scheme.blue_br|terminal.bright_blue|scheme.blue::(v+15)"
# blue_dim = "scheme.blue_dim|terminal.dim_blue|scheme.blue::(v-15)"
cyan = "@cyan"
# cyan_br = "scheme.cyan_br|terminal.bright_cyan|scheme.cyan::(v+15)"
# cyan_dim = "scheme.cyan_dim|terminal.dim_cyan|scheme.cyan::(v-15)"
green = "@green"
# green_br = "scheme.green_br|terminal.bright_green|scheme.green::(v+15)"
# green_dim = "scheme.green_dim|terminal.dim_green|scheme.green::(v-15)"
pink = "@cursor"
# pink_br = "scheme.pink_br|terminal.bright_magenta|scheme.pink::(v+15)"
# pink_dim = "scheme.pink_dim|terminal.dim_magenta|scheme.pink::(v-15)"
red = "@red"
# red_br = "scheme.red_br|terminal.bright_red|scheme.red::(v+15)"
# red_dim = "scheme.red_dim|terminal.dim_red|scheme.red::(v-15)"
white = "@fg"
# white_br = "scheme.white_br|terminal.bright_white|scheme.white::(v+15)"
# white_dim = "scheme.white_dim|terminal.dim_white|scheme.white::(v-15)"
yellow = "@yellow"
# yellow_br = "scheme.yellow_br|terminal.bright_yellow|scheme.yellow::(v+15)"
# yellow_dim = "scheme.yellow_dim|terminal.dim_yellow|scheme.yellow::(v-15)"

[syntax.boolean]
# bg = "syntax.boolean.bg"
fg = "@dataBase"
# style = "syntax.boolean.style"
# weight = "syntax.boolean.weight"

[syntax.comment]
# bg = "syntax.comment.bg"
fg = "#5A5A5A"
# style = "syntax.comment.style"
# weight = "syntax.comment.weight"

# [syntax.comment.doc]
# bg = "syntax.comment.doc.bg|syntax.doc.bg|syntax.comment.bg"
# fg = "syntax.comment.doc.fg|syntax.doc.fg|syntax.comment.fg"
# style = "syntax.comment.doc.style|syntax.doc.style|syntax.comment.style"
# weight = "syntax.comment.doc.weight|syntax.doc.weight|syntax.comment.weight"

[syntax.constant]
# bg = "syntax.constant.bg"
fg = "@dataBase"
# style = "syntax.constant.style"
# weight = "syntax.constant.weight"

# [syntax.constant.builtin]
# bg = "syntax.constant.builtin.bg|syntax.builtin.bg|syntax.constant.bg"
# fg = "syntax.constant.builtin.color|syntax.builtin.color|syntax.constant.fg"
# style = "syntax.constant.builtin.style|syntax.builtin.style|syntax.constant.style"
# weight = "syntax.constant.builtin.weight|syntax.builtin.weight|syntax.constant.weight"

# [syntax.enum]
# bg = "syntax.enum.bg"
# fg = "syntax.enum.color"
# style = "syntax.enum.style"
# weight = "syntax.enum.weight"

[syntax.func]
bg = "syntax.func.bg"
fg = "@fg"
# style = "syntax.func.style"
# weight = 700

[syntax.func.builtin]
# bg = "syntax.func.builtin.bg|syntax.builtin.bg|syntax.function.bg"
fg = "@type::l=80"
# style = "syntax.func.builtin.style|syntax.builtin.style|syntax.function.style"
# weight = 700

[syntax.func.decl]
# bg = "syntax.func.decl.bg|syntax.function.bg"
fg = "@fg"
# style = "syntax.func.style"
weight = 700

# [syntax.func.def]
# bg = "syntax.func.def.bg|syntax.function.bg"
# fg = "syntax.func.def.color|syntax.function.fg"
# style = "syntax.func.def.style|syntax.function.style"
# weight = "syntax.func.def.weight|syntax.function.weight"

# [syntax.func.method]
# bg = "syntax.func.method.bg|syntax.func.bg"
# fg = "syntax.func.method.color|syntax.func.fg"
# style = "syntax.func.method.style|syntax.func.style"
# weight = "syntax.func.method.weight|syntax.func.weight"

[syntax.func.macro]
fg = "$syntax.func.builtin.fg"

[syntax.keyword]
# bg = "syntax.keyword.bg"
fg = "@keywordBase"
# style = "syntax.keyword.style"
# weight = "syntax.keyword.weight"

# [syntax.keyword.conditional]
# bg = "syntax.keyword.conditional.bg|syntax.keyword.bg"
# fg = "syntax.keyword.conditional.fg|syntax.keyword.fg"
# style = "syntax.keyword.conditional.style|syntax.keyword.style"
# weight = "syntax.keyword.conditional.weight|syntax.keyword.weight"

# [syntax.keyword.conditional.ternary]
# bg = "syntax.keyword.conditional.ternary.bg|syntax.keyword.conditional.bg|syntax.keyword.bg"
# fg = "syntax.keyword.conditional.ternary.fg|syntax.keyword.conditional.fg|syntax.keyword.fg"
# style = "syntax.keyword.conditional.ternary.style|syntax.keyword.conditional.style|syntax.keyword.style"
# weight = "syntax.keyword.conditional.ternary.weight|syntax.keyword.conditional.weight|syntax.keyword.weight"

# [syntax.keyword.coroutine]
# bg = "syntax.keyword.coroutine.bg|syntax.keyword.bg"
# fg = "syntax.keyword.coroutine.fg|syntax.keyword.fg"
# style = "syntax.keyword.coroutine.style|syntax.keyword.style"
# weight = "syntax.keyword.coroutine.weight|syntax.keyword.weight"

# [syntax.keyword.debug]
# bg = "syntax.keyword.debug.bg|syntax.keyword.bg"
# fg = "syntax.keyword.debug.fg|syntax.keyword.fg"
# style = "syntax.keyword.debug.style|syntax.keyword.style"
# weight = "syntax.keyword.debug.weight|syntax.keyword.weight"

# [syntax.keyword.directive]
# bg = "syntax.keyword.directive.bg|syntax.keyword.bg"
# fg = "syntax.keyword.directive.fg|syntax.keyword.fg"
# style = "syntax.keyword.directive.style|syntax.keyword.style"
# weight = "syntax.keyword.directive.weight|syntax.keyword.weight"

# [syntax.keyword.directive.define]
# bg = "syntax.keyword.directive.define.bg|syntax.keyword.directive.bg|syntax.keyword.bg"
# fg = "syntax.keyword.directive.define.fg|syntax.keyword.directive.fg|syntax.keyword.fg"
# style = "syntax.keyword.directive.define.style|syntax.keyword.directive.style|syntax.keyword.style"
# weight = "syntax.keyword.directive.define.weight|syntax.keyword.directive.weight|syntax.keyword.weight"

# [syntax.keyword.exception]
# bg = "syntax.keyword.exception.bg|syntax.keyword.bg"
# fg = "syntax.keyword.exception.fg|syntax.keyword.fg"
# style = "syntax.keyword.exception.style|syntax.keyword.style"
# weight = "syntax.keyword.exception.weight|syntax.keyword.weight"

# [syntax.keyword.function]
# bg = "syntax.keyword.function.bg|syntax.keyword.bg"
# fg = "syntax.keyword.function.fg|syntax.keyword.fg"
# style = "syntax.keyword.function.style|syntax.keyword.style"
# weight = "syntax.keyword.function.weight|syntax.keyword.weight"

# [syntax.keyword.import]
# bg = "syntax.keyword.import.bg|syntax.keyword.bg"
# fg = "syntax.keyword.import.fg|syntax.keyword.fg"
# style = "syntax.keyword.import.style|syntax.keyword.style"
# weight = "syntax.keyword.import.weight|syntax.keyword.weight"

[syntax.keyword.operator]
# bg = "syntax.keyword.operator.bg|syntax.keyword.bg"
fg = "@orange::l=80"
# style = "syntax.keyword.operator.style|syntax.keyword.style"
# weight = "syntax.keyword.operator.weight|syntax.keyword.weight"

# [syntax.keyword.repeat]
# bg = "syntax.keyword.repeat.bg|syntax.keyword.bg"
# fg = "syntax.keyword.repeat.fg|syntax.keyword.fg"
# style = "syntax.keyword.repeat.style|syntax.keyword.style"
# weight = "syntax.keyword.repeat.weight|syntax.keyword.weight"

# [syntax.keyword.return]
# bg = "syntax.keyword.return.bg|syntax.keyword.bg"
# fg = "syntax.keyword.return.fg|syntax.keyword.fg"
# style = "syntax.keyword.return.style|syntax.keyword.style"
# weight = "syntax.keyword.return.weight|syntax.keyword.weight"

# [syntax.keyword.type]
# bg = "syntax.keyword.type.bg|syntax.keyword.bg"
# fg = "#f00"
# style = "syntax.keyword.type.style|syntax.keyword.style"
# weight = "syntax.keyword.type.weight|syntax.keyword.weight"

# [syntax.namespace]
# bg = "syntax.namespace.bg|syntax.var.builtin.bg|syntax.builtin.bg|syntax.var.bg"
# fg = "syntax.namespace.color|syntax.var.builtin.color|syntax.builtin.color|syntax.var.fg"
# style = "syntax.namespace.style|syntax.var.builtin.style|syntax.builtin.style|syntax.var.style"
# weight = "syntax.namespace.weight|syntax.var.builtin.weight|syntax.builtin.weight|syntax.var.weight"

[syntax.number]
# bg = "syntax.number.bg"
fg = "@dataBase"
# style = "syntax.number.style"
# weight = "syntax.number.weight"

[syntax.op]
primary = "@orange::l=80"
# bg = "syntax.op.bg"
# fg = "$syntax.punc.fg"
fg = "$self.primary"
# style = "syntax.op.style"
# weight = "syntax.op.weight"

[syntax.op.bitwise]
# bg = "syntax.op.bitwise.bg|syntax.op.bg"
fg = "$syntax.op.primary"
# style = "syntax.op.bitwise.style|syntax.op.style"
# weight = "syntax.op.bitwise.weight|syntax.op.weight"

[syntax.op.compare]
# bg = "syntax.op.compare.bg|syntax.op.bg"
fg = "$syntax.op.primary"
# style = "syntax.op.compare.style|syntax.op.style"
# weight = "syntax.op.compare.weight|syntax.op.weight"

[syntax.op.logical]
# bg = "syntax.op.logical.bg|syntax.op.bg"
fg = "$syntax.op.primary"
# style = "syntax.op.logical.style|syntax.op.style"
# weight = "syntax.op.logical.weight|syntax.op.weight"

[syntax.op.math]
# bg = "syntax.op.math.bg|syntax.op.bg"
fg = "$syntax.op.primary"
# style = "syntax.op.math.style|syntax.op.style"
# weight = "syntax.op.math.weight|syntax.op.weight"

[syntax.op.setter]
# bg = "syntax.op.setter.bg|syntax.op.bg"
fg = "$syntax.op.primary"
# style = "syntax.op.setter.style|syntax.op.style"
# weight = "syntax.op.setter.weight|syntax.op.weight"

# [syntax.param]
# bg = "syntax.param.bg|syntax.var.bg"
# fg = "syntax.param.color|syntax.var.fg"
# style = "syntax.param.style|syntax.var.style"
# weight = "syntax.param.weight|syntax.var.weight"

# [syntax.property]
# bg = "syntax.property.bg|syntax.var.bg"
# fg = "syntax.property.fg"
# style = "syntax.property.style"
# weight = "syntax.property.weight|syntax.var.weight"

[syntax.punc]
# bg = "syntax.punc.bg"
fg = "@unimportant"
# style = "syntax.punc.style"
# weight = "syntax.punc.weight"

[syntax.punc.bracket]
# bg = "syntax.punc.bracket.bg|syntax.punc.bg"
# fg = "@cursor"
# style = "syntax.punc.bracket.style|syntax.punc.style"
# weight = "syntax.punc.bracket.weight|syntax.punc.weight"

# [syntax.punc.delimiter]
# bg = "syntax.punc.delimiter.bg|syntax.punc.bg"
# fg = "syntax.punc.delimiter.color|syntax.punc.fg"
# style = "syntax.punc.delimiter.style|syntax.punc.style"
# weight = "syntax.punc.delimiter.weight|syntax.punc.weight"

# [syntax.punc.symbol]
# bg = "syntax.punc.symbol.bg|syntax.punc.bg"
# fg = "syntax.punc.symbol.color|syntax.punc.fg"
# style = "syntax.punc.symbol.style|syntax.punc.style"
# weight = "syntax.punc.symbol.weight|syntax.punc.weight"

[syntax.punc.tag]
# bg = "syntax.punc.tag.bg|syntax.punc.bracket.bg|syntax.punc.bg"
fg = "@unimportant"
# style = "syntax.punc.tag.style|syntax.punc.bracket.style|syntax.punc.style"
# weight = "syntax.punc.tag.weight|syntax.punc.bracket.weight|syntax.punc.weight"

[syntax.string]
# bg = "syntax.string.bg"
fg = "@dataBase"
# style = "syntax.string.style"
# weight = "syntax.string.weight"

[syntax.string.escape]
# bg = "syntax.string.escape.bg|syntax.string.bg"
fg = "@data::l=90"
# style = "syntax.string.escape.style|syntax.string.style"
# weight = "syntax.string.escape.weight|syntax.string.weight"

[syntax.string.inter]
# bg = "syntax.string.inter.bg|syntax.punc.bg"
fg = "@data::l=90"
# style = "syntax.string.inter.style|syntax.punc.style"
# weight = "syntax.string.inter.weight|syntax.punc.weight"

[syntax.string.regex]
# bg = "syntax.string.regex.bg|syntax.string.bg"
fg = "@keyword::(a=10,l=60)"
# style = "syntax.string.regex.style|syntax.string.style"
# weight = "syntax.string.regex.weight|syntax.string.weight"

# [syntax.string.special]
# bg = "syntax.string.special.bg|syntax.string.bg"
# fg = "syntax.string.special.color|syntax.string.fg"
# style = "syntax.string.special.style|syntax.string.style"
# weight = "syntax.string.special.weight|syntax.string.weight"

[syntax.type]
# bg = "syntax.type.bg"
fg = "@type::l=70"
# style = "syntax.type.style"
# weight = "syntax.type.weight"

[syntax.type.builtin]
# bg = "syntax.type.builtin.bg|syntax.builtin.bg|syntax.type.bg"
fg = "@typeRef"
# style = "syntax.type.builtin.style|syntax.builtin.style|syntax.type.style"
# weight = "syntax.type.builtin.weight|syntax.builtin.weight|syntax.type.weight"

[syntax.type.primitive]
# bg = "syntax.type.primitive.bg|syntax.type.builtin.bg|syntax.builtin.bg|syntax.type.bg"
fg = "@keywordBase"
# style = "syntax.type.primitive.style|syntax.type.builtin.style|syntax.builtin.style|syntax.type.style"
# weight = "syntax.type.primitive.weight|syntax.type.builtin.weight|syntax.builtin.weight|syntax.type.weight"

# [syntax.var]
# bg = "syntax.var.bg"
# fg = "syntax.var.fg"
# style = "syntax.var.style"
# weight = "syntax.var.weight"

# [syntax.var.builtin]
# bg = "syntax.var.builtin.bg|syntax.builtin.bg|syntax.var.bg"
# fg = "syntax.var.builtin.color|syntax.type.fg"
# style = "syntax.var.builtin.style|syntax.builtin.style|syntax.var.style"
# weight = "syntax.var.builtin.weight|syntax.builtin.weight|syntax.var.weight"

[syntax.z.html_attribute]
# bg = "syntax.z.html_attribute.bg"
fg = "@fgBase"
# style = "syntax.z.html_attribute.style"
# weight = "syntax.z.html_attribute.weight"

[syntax.z.html_tag]
# bg = "syntax.z.html_tag.bg"
fg = "@typeRef"
# style = "syntax.z.html_tag.style"
# weight = "syntax.z.html_tag.weight"

# [syntax.z.json_key]
# bg = "syntax.z.json_key.bg|syntax.property.bg"
# fg = "syntax.z.json_key.color|syntax.property.fg"
# style = "syntax.z.json_key.style|syntax.property.style"
# weight = "syntax.z.json_key.weight|syntax.property.weight"

# [syntax.z.rs_lifetime]
# bg = "syntax.z.rs_lifetime.bg"
# fg = "syntax.z.rs_lifetime.color"
# style = "syntax.z.rs_lifetime.style"
# weight = "syntax.z.rs_lifetime.weight"

[ui]
bg = "#1d1d1b"
# file_drop = "ui.file_drop|ui.bg::(value+10, alpha=80)"
link = "@blue"
panel = "@black"
popup = "@black"
# terminal = "ui.terminal|terminal.bg|ui.bg"

[ui.bars]
bottom = "ui.bars.bottom|ui.bg"
tool = "$ui.bg"
top = "@black"

[ui.bars.tab]
active = "$ui.bars.tool"
bg = "@black"
inactive = "@black"

# [ui.bars.title]
# inactive = "ui.bars.title.inactive|ui.bars.top|ui.bg"

[ui.border]
primary = "@black"
secondary = "$ui.bars.tool::l-1"

# [ui.button]
# active = "ui.button.active|ui.button.primary::v+5"
# disabled = "ui.button.disabled|ui.button.primary|ui.bg"
# pressed = "ui.button.pressed|ui.button.primary::v+5"
# primary = "ui.button.primary|ui.bg"

# [ui.element]
# active = "ui.element.active|ui.bg::v+5"
# bg = "ui.element.bg"
# disabled = "ui.element.disabled"
# hover = "ui.element.hover|ui.bg::v-5"
# pressed = "ui.element.pressed|ui.bg::v+5"

# [ui.header]
# hover = "ui.header.hover|ui.header.primary::v+5|ui.header::v+5|ui.button.primary::v-5"
# primary = "ui.header.primary|ui.header|ui.panel|ui.bg"

[ui.scrollbar]
border = "@trans"
highlight = "@trans"
thumb = "@fg::a=10"
track = "@trans"

[ui.text]
accent = "@cursor"
active = "@fg"
inactive = "@fg::l=70"
muted = "@fg::l=50"
placeholder = "@fg::l=30"

# Overrides
[overrides]
# "style/syntax/function.special/color" = "#F00"

# Deletions
[deletions]
keys = [
"style/accents", "style/background.appearance"
]
